// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// hello_world_func
void hello_world_func();
RcppExport SEXP _GSMVAEx_hello_world_func() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    hello_world_func();
    return R_NilValue;
END_RCPP
}
// loglog
Eigen::MatrixXd loglog(SEXP tobs, SEXP event, SEXP X, SEXP XD, double const eps, double const kappa, SEXP beta);
RcppExport SEXP _GSMVAEx_loglog(SEXP tobsSEXP, SEXP eventSEXP, SEXP XSEXP, SEXP XDSEXP, SEXP epsSEXP, SEXP kappaSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type tobs(tobsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type event(eventSEXP);
    Rcpp::traits::input_parameter< SEXP >::type X(XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type XD(XDSEXP);
    Rcpp::traits::input_parameter< double const >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double const >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(loglog(tobs, event, X, XD, eps, kappa, beta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GSMVAEx_hello_world_func", (DL_FUNC) &_GSMVAEx_hello_world_func, 0},
    {"_GSMVAEx_loglog", (DL_FUNC) &_GSMVAEx_loglog, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_GSMVAEx(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
